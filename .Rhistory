myflights <- hflights
library(tidyverse)
library(hflights)
library(magrittr)
library(scales)
library(reshape2)
library(gcookbook)
myflights <- hflights
flight_summ <- myflights %>% mutate(Month = factor(Month,
labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),
levels = 1:12,
ordered= T)) %>%
count(Origin,Month) %>% group_by(Origin) %>% summarise(meanFlight = mean(n))
myflights %>% mutate(Month = factor(Month,
labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),
levels = 1:12,
ordered= T)) %>%
count(Origin,Month) %>%
ggplot() + geom_line(aes(x=Month,y=n,group=Origin,colour=Origin)) +
geom_point(aes(x=Month,y=n,colour=Origin),size=4,alpha=0.4) +
geom_segment(aes(x=-Inf,xend=Inf,y=flight_summ[2,2],yend=flight_summ[2,2]),linetype = 3)+
geom_segment(aes(x=-Inf,xend=Inf,y=flight_summ[1,2],yend=flight_summ[1,2]),linetype = 3)+
labs(y = "Frequency") + theme_minimal()
flight_summ[1,2]
flight_summ[1,2]
subset[1,3]
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex,colour=sex)) +geom_point() + labs(x="Meal Time",y="Dinner") +
geom_line(aes(x=subdata[1,1],xend=subdata[1,2],y=unname(subdata[1,3]),yend=unname(subdata[2,3])))
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex,colour=sex)) +geom_point() + labs(x="Meal Time",y="Dinner") +
geom_line(aes(x=subdata[1,1],xend=subdata[1,2],y=subdata[1,3],yend=subdata[2,3]))
subdata[1,3]
subdata[2,3]
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex,colour=sex)) +geom_point() + labs(x="Meal Time",y="Dinner") +
geom_line(aes(x=-Inf,xend=Inf,y=subdata[1,3],yend=subdata[2,3]))
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex,colour=sex)) +geom_point() + labs(x="Meal Time",y="Dinner") +
geom_segment(aes(x=-Inf,xend=Inf,y=subdata[1,3],yend=subdata[2,3]))
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex,colour=sex)) +geom_point() + labs(x="Meal Time",y="Dinner") +
geom_segment(aes(x=subdata[1,1],xend=subdata[2,1],y=subdata[1,3],yend=subdata[2,3]))
subdata
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex,colour=sex)) +geom_point() + labs(x="Meal Time",y="Dinner") +
geom_segment(aes(x=subdata[1,1],xend=subdata[3,1],y=subdata[1,3],yend=subdata[3,3]))
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex,colour=sex)) +geom_point() + labs(x="Meal Time",y="Dinner") +
geom_segment(aes(x=subdata[1,1],xend=subdata[3,1],y=subdata[1,3],yend=subdata[3,3]),linetype=3) +
geom_segment(aes(x=subdata[2,1],xend=subdata[4,1],y=subdata[2,3],yend=subdata[4,3]),linetype=3)
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex)) +geom_point(aes(colour= sex)) + labs(x="Meal Time",y="Dinner") +
geom_segment(aes(x=subdata[1,1],xend=subdata[3,1],y=subdata[1,3],yend=subdata[3,3]),linetype=3) +
geom_segment(aes(x=subdata[2,1],xend=subdata[4,1],y=subdata[2,3],yend=subdata[4,3]),linetype=3)
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex)) +geom_point(aes(colour= sex)) + labs(x="Meal Time",y="Mean Percent Tip") +
geom_segment(aes(x=subdata[1,1],xend=subdata[3,1],y=subdata[1,3],yend=subdata[3,3]),linetype=3) +
geom_segment(aes(x=subdata[2,1],xend=subdata[4,1],y=subdata[2,3],yend=subdata[4,3]),linetype=3) +
scale_y_continuous(labels = percent)
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex)) +geom_point(aes(colour= sex)) + labs(x="Meal Time",y="Mean Percent Tip") +
geom_segment(aes(x=subdata[1,1],xend=subdata[3,1],y=subdata[1,3],yend=subdata[3,3]),linetype=3) +
geom_segment(aes(x=subdata[2,1],xend=subdata[4,1],y=subdata[2,3],yend=subdata[4,3]),linetype=3) +
scale_y_continuous(labels = percent) + expand_limits(y=c(0.15,0.18))
subdata <- master %>% group_by(time,smoker)
subdata
subdata <- master %>% group_by(time,smoker) %>%  ggplot(aes(x=time,y=smoker,colour=sex))
subdata <- master %>% group_by(time,smoker) %>%  ggplot(aes(x=time,y=smoker,colour=sex)) +geom_point()
subdata %>% group_by(time,smoker) %>%  ggplot(aes(x=time,y=smoker,colour=sex)) +geom_point()
master %>% group_by(time,smoker) %>%  ggplot(aes(x=time,y=smoker,colour=sex)) +geom_point()
master %>%  ggplot(aes(x=time,y=smoker,colour=sex)) +geom_point()
master %>% summarise(prctTip = mean(tip/total_bill)) %>%   ggplot(aes(x=time,y=smoker,colour=sex)) +geom_point()
master %>% mutate(prctTip = mean(tip/total_bill)) %>%   ggplot(aes(x=time,y=smoker,colour=sex)) +geom_point()
master %>% mutate(prctTip = mean(tip/total_bill))
master %>% mutate(prctTip = mean(tip/total_bill)) %>% ggplot(aes(x=time,y=smoker,colour=sex)) +geom_point(position="jitter")
master %>% mutate(prctTip = mean(tip/total_bill)) %>% ggplot(aes(x=time,y=smoker,colour=sex,size=prctTip)) +geom_point(position="jitter")
master %>% mutate(prctTip = tip/total_bill) %>% ggplot(aes(x=time,y=smoker,colour=sex,size=prctTip)) +geom_point(position="jitter")
## Case Study
library(tidyverse)
library(magrittr)
library(ggplot2)
## Set up data
master <- reshape::tips
## Question 1a
master %>% ggplot() + geom_point(aes(x= time,y=total_bill,shape=sex,colour=smoker))
## Question 1b
master %>% ggplot(aes(x=time,y=total_bill,shape=sex,colour=smoker)) + geom_point(position="jitter")
## Question 1c
subdata <- master %>% group_by(time,sex) %>% summarise(avg_tips = mean(tip/total_bill))
subdata %>% ggplot(aes(x=time,y=avg_tips,shape=sex)) +geom_point(aes(colour= sex)) + labs(x="Meal Time",y="Mean Percent Tip") +
geom_segment(aes(x=subdata[1,1],xend=subdata[3,1],y=subdata[1,3],yend=subdata[3,3]),linetype=3) +
geom_segment(aes(x=subdata[2,1],xend=subdata[4,1],y=subdata[2,3],yend=subdata[4,3]),linetype=3) +
scale_y_continuous(labels = percent) + expand_limits(y=c(0.15,0.18))
## Question 1d
master %>% mutate(prctTip = tip/total_bill) %>% ggplot(aes(x=time,y=smoker,colour=sex,size=prctTip)) +geom_point(position="jitter")
master %>%  count(sex,time)
master %>%  count(sex,time) %>% ggplot(aes(x=time,y=n,colour=sex)) + geom_bar()
master %>% ggplot(aes(x=time,y=total_bill,colour=sex)) + geom_bar()
master %>%  count(sex,time) %>% ggplot(aes(x=time,y=n,colour=sex)) + geom_bar(stat="identity")
master %>%  count(sex,time) %>% ggplot(aes(x=time,y=n,fill=sex)) + geom_bar(stat="identity")
master %>%  count(sex,time) %>% ggplot(aes(x=time,y=n,fill=sex)) + geom_bar(stat="identity") + labs(y="count")
master %>%  count(sex,time) %>% ggplot(aes(x=time,y=n,fill=sex)) + geom_bar(stat="identity",position = position_dodge) + labs(y="count")
master %>%  count(sex,time) %>% ggplot(aes(x=time,y=n,fill=sex)) + geom_bar(stat="identity",position = position_dodge) + labs(y="count")
master %>%  count(sex,time) %>% ggplot(aes(x=time,y=n,fill=sex)) + geom_bar(stat="identity",position = "dodge") + labs(y="count")
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar()
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity")
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n))
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n,label=n))
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n,label=n,colour="white"))
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n,label=n),colour="white")
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n-20,label=n),colour="white")
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n-10,label=n),colour="white")
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n,label=n),colour="white",vjust=0.25)
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n,label=n),colour="white",vjust=10)
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n,label=n),colour="white",vjust=1)
master %>% count(time) %>% ggplot(aes(x=time,y=n)) + geom_bar(stat="identity") + geom_text(aes(x=time,y=n,label=n),colour="white",vjust=2)
set.seed(1)
x_int <- seq(10)
x_fact <- factor(seq(10))
y <- rnorm(10,2,13)
myDF <- data_frame(x_int,x_fact,y)
## Question2
set.seed(1)
x_int <- seq(10)
x_fact <- factor(seq(10))
y <- rnorm(10,2,13)
myDF <- data_frame(x_int,x_fact,y)
myDF %>% ggplot(aes(x=x_int,y=y))+geom_line()
myDF %>% ggplot(aes(x=x_int,y=y))+geom_line()+expand_limits(x=seq(1,10))
myDF %>% ggplot(aes(x=x_fact,y=y))+geom_line()+expand_limits(x=seq(1,10))
myDF %>% ggplot(aes(x=x_fact,y=y))+geom_line()
myDF %>% ggplot(aes(x=as.numeric(x_fact),y=y))+geom_line()
set.seed(33)
day <- req(seq(7),2)
stockPrice <- rnorm(14,2,13)
company <- c(rep("GOOG",7),rep("AAPL",7))
myDF <- data_frame(day,stockPrice,company)
set.seed(33)
day <- rep(seq(7),2)
stockPrice <- rnorm(14,2,13)
company <- c(rep("GOOG",7),rep("AAPL",7))
myDF <- data_frame(day,stockPrice,company)
View(myDF)
myDF %>% ggplot(aes(x=day,ystockPrice)) + geom_line()
myDF %>% ggplot(aes(x=day,y=stockPrice)) + geom_line()
myDF %>% group_by(company) %>% ggplot(aes(x=day,y=stockPrice)) + geom_line()
myDF %>% group_by(company)
myDF %>%  ggplot(aes(x=day,y=stockPrice,group=company)) + geom_line()
myDF %>%  ggplot(aes(x=day,y=stockPrice,group=company,colour=company)) + geom_line()
knitr::opts_chunk$set(echo = F)
library(tidyverse)
library(magrittr)
library(zoo)
library(ggplot2)
library(scales)
library(maps)
library(mapdata)
library(grid)
## Set the working dir according to who is working
curr_wd <- strsplit(getwd(), "/")[[1]]
if ("chunheisiu" %in% curr_wd) {
setwd("/Users/chunheisiu/Dropbox/Documents/USF/2018_Spring/BSDS_100/USF-BSDS100-CaseStudy")
} else if ("jacquessham" %in% curr_wd){
setwd("/Users/jacquessham/Documents/GitHub/USF-BSDS100-CaseStudy")
} else {
wd <- readline(prompt = "You're not Jacques or Charles! Enter the path to the data: ")
setwd(wd)
}
## Read the data
data <- read.csv("Air_Traffic_Passenger_Statistics.csv")
# Rename the column names
names(data) <- c("date", "operAirline", "operCode", "airline", "code", "isDomestic",
"region", "type", "category", "terminal", "area", "pax")
# Convert isDomestic to boolean
data$isDomestic %<>% recode("Domestic" = T, "International" = F)
# Reformat the dates into Date objects
data$date %<>%
as.character() %>%
as.yearmon("%Y%m") %>%
as.Date()
# Get month and year values
data %<>%
mutate(month = date %>% format("%m") %>% factor(labels = month.name),
year = date %>% format("%Y") %>% as.numeric())
# Remove data from 2005 for easy comparison
data %<>% filter(year != 2005)
data$region %<>% recode("Central America" = "Latin America",
"South America" = "Latin America")
## operAirline = Operating Airline, the airline that really operating, some airline would own a child company to operate a single route
## operCode = Operating Airline Code
## airline = Published Airline, mother company airline
## code = Published Airline Code, code for variable "airline"
## isDomestic: If the flight is domestic,T; if international: F
## region: Geom region
## type: activity type; Deplaned means arrival, Enplaned means departure, Thru / Transit is other
## category: Airline price type; Low fare is Low cost carrier, else are others
## terminal: SFO terminal
## area: area within SFO terminal
## pax: passenger count of given row
data %>% count(airline)
airline_count <- data %>% count(airline)
View(airline_count)
data$airline %<>% recode("United Airlines - Pre 07/01/2013" = "United Airlines")
airline_count <- data %>% count(airline)
data %>% filter(airline=="WOW Air")
data %>% filter(category=="Low Fare" & isDomestic==F) %>% count(airline)
data %>% filter(airline=="Emirates")
data %>% filter(airline=="Emirates")
data %>% filter(airline=="Emirates")
data %>% filter(airline=="Emirates ")
data$airline %<>% recode("Emirates " = "Emirates")
data %>% filter(airline=="Emirates ")
data %>% filter(airline=="Emirates")
data %>% filter(category=="Low Fare" & isDomestic==F) %>% count(airline)
data %<>% filter(airline="Air China") %<>% recode(category="Full Service")
data %<>% filter(airline=="Air China") %<>% recode(category="Full Service")
data %<>% filter(airline=="Air China")
View(data)
View(data)
knitr::opts_chunk$set(echo = F)
library(tidyverse)
library(magrittr)
library(zoo)
library(ggplot2)
library(scales)
library(maps)
library(mapdata)
library(grid)
## Set the working dir according to who is working
curr_wd <- strsplit(getwd(), "/")[[1]]
if ("chunheisiu" %in% curr_wd) {
setwd("/Users/chunheisiu/Dropbox/Documents/USF/2018_Spring/BSDS_100/USF-BSDS100-CaseStudy")
} else if ("jacquessham" %in% curr_wd){
setwd("/Users/jacquessham/Documents/GitHub/USF-BSDS100-CaseStudy")
} else {
wd <- readline(prompt = "You're not Jacques or Charles! Enter the path to the data: ")
setwd(wd)
}
## Read the data
data <- read.csv("Air_Traffic_Passenger_Statistics.csv")
# Rename the column names
names(data) <- c("date", "operAirline", "operCode", "airline", "code", "isDomestic",
"region", "type", "category", "terminal", "area", "pax")
# Convert isDomestic to boolean
data$isDomestic %<>% recode("Domestic" = T, "International" = F)
# Reformat the dates into Date objects
data$date %<>%
as.character() %>%
as.yearmon("%Y%m") %>%
as.Date()
# Get month and year values
data %<>%
mutate(month = date %>% format("%m") %>% factor(labels = month.name),
year = date %>% format("%Y") %>% as.numeric())
# Remove data from 2005 for easy comparison
data %<>% filter(year != 2005)
data$region %<>% recode("Central America" = "Latin America",
"South America" = "Latin America")
## operAirline = Operating Airline, the airline that really operating, some airline would own a child company to operate a single route
## operCode = Operating Airline Code
## airline = Published Airline, mother company airline
## code = Published Airline Code, code for variable "airline"
## isDomestic: If the flight is domestic,T; if international: F
## region: Geom region
## type: activity type; Deplaned means arrival, Enplaned means departure, Thru / Transit is other
## category: Airline price type; Low fare is Low cost carrier, else are others
## terminal: SFO terminal
## area: area within SFO terminal
## pax: passenger count of given row
airline_count <- data %>% count(airline)
View(airline_count)
## Need to clean up incorrect data
## https://www.icao.int/sustainability/Documents/LCC-List.pdf
data$airline %<>% recode("United Airlines - Pre 07/01/2013" = "United Airlines")
data$airline %<>% recode("Emirates " = "Emirates")
airline_count <- data %>% count(airline)
data %>% filter(category=="Low Fare" & isDomestic==F) %>% count(airline)
data %>% filter(airline=="Emirates")
data$category %<>% recode("Other" = "Full Service")
data %>% filter(category=="Low Fare" & isDomestic==F) %>% count(airline)
data %<>% ifelse(airline=="Air China",category <- "Full Service")
ifelse(data$airline=="Air China",category <- "Full Service")
if(data$airline=="Air China",category <- "Full Service")
if(data$airline=="Air China"){category <- "Full Service"}
data[which(airline=="Air China"),category]<-"Full Service"
data[which(data$airline=="Air China"),data$category]<-"Full Service"
data[which(data$airline=="Air China"),data$category]
data[which(data$airline=="Air China"),]
data[which(data$airline=="Air China"),category]
data[which(data$airline=="Air China"),"category"]
data[which(data$airline=="Air China"),"category"]<-"Full Service"
data %>% filter(category=="Low Fare" & isDomestic==F) %>% count(airline)
data[which(data$airline==non_lcc),"category"]<-"Full Service"
non_lcc <- c("Air China","Air India Limited","Air New Zealand","Air Pacific Limited dba Fiji Airways")
data[which(data$airline==non_lcc),"category"]<-"Full Service"
data %>% filter(category=="Low Fare" & isDomestic==F) %>% count(airline)
data[which(data$airline==non_lcc),"category"]<-"Full Service"
data %>% filter(category=="Low Fare" & isDomestic==F) %>% count(airline)
non_lcc <- c("Air China","Air India Limited","Air New Zealand","Air Pacific Limited dba Fiji Airways","Emirates")
data[which(data$airline==non_lcc),"category"]<-"Full Service"
data[which(data$airline=="Air China"|
data$airline== "Air India Limited"|
data$airline=="Air New Zealand"|
data$airline=="Air Pacific Limited dba Fiji Airways"|
data$airline=="Emirates"| data$airline=="United Airlines" |
data$airline=="Virgin America" | data$airline = "Volaris Airlines"),"category"]<-"Full Service"
data[which(data$airline=="Air China"|
data$airline== "Air India Limited"|
data$airline=="Air New Zealand"|
data$airline=="Air Pacific Limited dba Fiji Airways"|
data$airline=="Emirates"| data$airline=="United Airlines" |
data$airline=="Virgin America" | data$airline == "Volaris Airlines"),"category"]<-"Full Service"
data %>% filter(category=="Low Fare" & isDomestic==F) %>% count(airline)
data %>% filter(category!="Low Fare" & isDomestic==F) %>% count(airline)
Non_lcc_list <- data %>% filter(category!="Low Fare" & isDomestic==F) %>% count(airline)
View(Non_lcc_list)
Non_lcc_list <- data %>% filter(category!="Low Fare" & isDomestic==F) %>% count(airline)
View(Non_lcc_list)
View(data)
data[which(data$airline=="XL Airways France" |
data$airline=="WOW Air"|
data$airline=="WestJet Airlines"),"category"] <- "Low Fare"
Non_lcc_list <- data %>% filter(category!="Low Fare" & isDomestic==F) %>% count(airline)
Non_lcc_list
View(Non_lcc_list)
data %>% filter(airline=="Swissport USA")
Non_lcc_list <- data %>% filter(category=="Low Fare" & isDomestic==F) %>% count(airline)
Non_lcc_list
Non_lcc_list <- data %>% filter(category=="Low Fare" & isDomestic==T) %>% count(airline)
Non_lcc_list
data$airline == "AirTran Airways"
data[which(data$airline=="AirTran Airways")]
data[which(data$airline=="AirTran Airways"),]
Non_lcc_list <- data %>% filter(category=="Low Fare") %>% count(airline)
## Need to clean up incorrect data
## Below has the list of low cost carrier
## https://www.icao.int/sustainability/Documents/LCC-List.pdf
## Merge "United Airlines - Pre 07/01/2013" to "United Airlines"
data$airline %<>% recode("United Airlines - Pre 07/01/2013" = "United Airlines")
## Remove the strip of "Emirates "
data$airline %<>% recode("Emirates " = "Emirates")
## Some airlines were wrongly identify in category, convert the below airlines to full service
data[which(data$airline=="Air China"|
data$airline== "Air India Limited"|
data$airline=="Air New Zealand"|
data$airline=="Air Pacific Limited dba Fiji Airways"|
data$airline=="Emirates"| data$airline=="United Airlines" |
data$airline=="Virgin America" | data$airline == "Volaris Airlines" |
data$airline=="Delta Air Lines" | data$airline=="US Airways"),"category"]<-"Full Service"
## Convert the below airlines to low cost carrier
data[which(data$airline=="XL Airways France" |
data$airline=="WOW Air"|
data$airline=="WestJet Airlines"),"category"] <- "Low Fare"
Non_lcc_list <- data %>% filter(category=="Low Fare") %>% count(airline)
data[which(data$airline=="Trego Dugan Aviation"),"category"] < "Other"
data[which(data$airline=="Trego Dugan Aviation"),"category"] < "Other"
data[which(data$airline=="Trego Dugan Aviation"),"category"] < "Other"
## Need to clean up incorrect data
## Below has the list of low cost carrier
## https://www.icao.int/sustainability/Documents/LCC-List.pdf
## Merge "United Airlines - Pre 07/01/2013" to "United Airlines"
data$airline %<>% recode("United Airlines - Pre 07/01/2013" = "United Airlines")
## Remove the strip of "Emirates "
data$airline %<>% recode("Emirates " = "Emirates")
## Some airlines were wrongly identify in category, convert the below airlines to full service
data[which(data$airline=="Air China"|
data$airline== "Air India Limited"|
data$airline=="Air New Zealand"|
data$airline=="Air Pacific Limited dba Fiji Airways"|
data$airline=="Emirates"| data$airline=="United Airlines" |
data$airline=="Virgin America" | data$airline == "Volaris Airlines" |
data$airline=="Delta Air Lines" | data$airline=="US Airways"),"category"]<-"Full Service"
## Convert the below airlines to low cost carrier
data[which(data$airline=="XL Airways France" |
data$airline=="WOW Air"|
data$airline=="WestJet Airlines"),"category"] <- "Low Fare"
## Convert the below airlines to other, that are cargo only or avaition management company
data[which(data$airline=="Trego Dugan Aviation"),"category"] < "Other"
data[which(data$airline=="Trego Dugan Aviation"),"category"] <- "Other"
data[which(data$airline=="Trego Dugan Aviation")]
data[which(data$airline=="Trego Dugan Aviation"),]
data[which(data$airline=="Trego Dugan Aviation"),"category"] <- "Other"
## Need to clean up incorrect data
## Below has the list of low cost carrier
## https://www.icao.int/sustainability/Documents/LCC-List.pdf
## Merge "United Airlines - Pre 07/01/2013" to "United Airlines"
data$airline %<>% recode("United Airlines - Pre 07/01/2013" = "United Airlines")
## Remove the strip of "Emirates "
data$airline %<>% recode("Emirates " = "Emirates")
## Some airlines were wrongly identify in category, convert the below airlines to full service
data[which(data$airline=="Air China"|
data$airline== "Air India Limited"|
data$airline=="Air New Zealand"|
data$airline=="Air Pacific Limited dba Fiji Airways"|
data$airline=="Emirates"| data$airline=="United Airlines" |
data$airline=="Virgin America" | data$airline == "Volaris Airlines" |
data$airline=="Delta Air Lines" | data$airline=="US Airways"),"category"]<-"Full Service"
## Convert the below airlines to low cost carrier
data[which(data$airline=="XL Airways France" |
data$airline=="WOW Air"|
data$airline=="WestJet Airlines"),"category"] <- "Low Fare"
## Convert the below airlines to other, that are cargo only or avaition management company
data[which(data$airline=="Trego Dugan Aviation"),"category"] <- "Other"
## Set the working dir according to who is working
curr_wd <- strsplit(getwd(), "/")[[1]]
if ("chunheisiu" %in% curr_wd) {
setwd("/Users/chunheisiu/Dropbox/Documents/USF/2018_Spring/BSDS_100/USF-BSDS100-CaseStudy")
} else if ("jacquessham" %in% curr_wd){
setwd("/Users/jacquessham/Documents/GitHub/USF-BSDS100-CaseStudy")
} else {
wd <- readline(prompt = "You're not Jacques or Charles! Enter the path to the data: ")
setwd(wd)
}
## Read the data
data <- read.csv("Air_Traffic_Passenger_Statistics.csv")
# Rename the column names
names(data) <- c("date", "operAirline", "operCode", "airline", "code", "isDomestic",
"region", "type", "category", "terminal", "area", "pax")
# Convert isDomestic to boolean
data$isDomestic %<>% recode("Domestic" = T, "International" = F)
# Reformat the dates into Date objects
data$date %<>%
as.character() %>%
as.yearmon("%Y%m") %>%
as.Date()
# Get month and year values
data %<>%
mutate(month = date %>% format("%m") %>% factor(labels = month.name),
year = date %>% format("%Y") %>% as.numeric())
# Remove data from 2005 for easy comparison
data %<>% filter(year != 2005)
data$region %<>% recode("Central America" = "Latin America",
"South America" = "Latin America")
data$category %<>% recode("Other" = "Full Service")
## operAirline = Operating Airline, the airline that really operating, some airline would own a child company to operate a single route
## operCode = Operating Airline Code
## airline = Published Airline, mother company airline
## code = Published Airline Code, code for variable "airline"
## isDomestic: If the flight is domestic,T; if international: F
## region: Geom region
## type: activity type; Deplaned means arrival, Enplaned means departure, Thru / Transit is other
## category: Airline price type; Low fare is Low cost carrier, else are others
## terminal: SFO terminal
## area: area within SFO terminal
## pax: passenger count of given row
## Need to clean up incorrect data
## Below has the list of low cost carrier
## https://www.icao.int/sustainability/Documents/LCC-List.pdf
## Merge "United Airlines - Pre 07/01/2013" to "United Airlines"
data$airline %<>% recode("United Airlines - Pre 07/01/2013" = "United Airlines")
## Remove the strip of "Emirates "
data$airline %<>% recode("Emirates " = "Emirates")
## Some airlines were wrongly identify in category, convert the below airlines to full service
data[which(data$airline=="Air China"|
data$airline== "Air India Limited"|
data$airline=="Air New Zealand"|
data$airline=="Air Pacific Limited dba Fiji Airways"|
data$airline=="Emirates"| data$airline=="United Airlines" |
data$airline=="Virgin America" | data$airline == "Volaris Airlines" |
data$airline=="Delta Air Lines" | data$airline=="US Airways"),"category"]<-"Full Service"
## Convert the below airlines to low cost carrier
data[which(data$airline=="XL Airways France" |
data$airline=="WOW Air"|
data$airline=="WestJet Airlines"),"category"] <- "Low Fare"
## Convert the below airlines to other, that are cargo only or avaition management company
data[which(data$airline=="Trego Dugan Aviation"),"category"] <- "Other"
data[which(data$airline=="Trego Dugan Aviation"),"category"]
data[which(data$airline=="Trego Dugan Aviation"),"category"] <- "Neither"
## Load library
library(tidyverse)
library(magrittr)
library(zoo)
library(ggplot2)
library(scales)
library(maps)
library(mapdata)
library(grid)
## Get working directory
curr_wd <- strsplit(getwd(), "/")[[1]]
if ("chunheisiu" %in% curr_wd) {
##setwd("/Users/chunheisiu/Dropbox/Documents/USF/2018_Spring/BSDS_100/USF-BSDS100-CaseStudy")
} else if ("jacquessham" %in% curr_wd){
setwd("/Users/jacquessham/Documents/GitHub/USF-CS360-FinalProject")
} else {
wd <- readline(prompt = "You're not Jacques or Charles! Enter the path to the data: ")
setwd(wd)
}
curr_wd <- strsplit(getwd(), "/")[[1]]
if ("chunheisiu" %in% curr_wd) {
##setwd("/Users/chunheisiu/Dropbox/Documents/USF/2018_Spring/BSDS_100/USF-BSDS100-CaseStudy")
} else if ("jacquessham" %in% curr_wd){
setwd("/Users/jacquessham/Documents/GitHub/USF-CS360-FinalProject")
} else {
wd <- readline(prompt = "You're not Jacques or Charles! Enter the path to the data: ")
setwd(wd)
}
data %>% count(country)
library(tidyverse)
library(magrittr)
library(zoo)
library(ggplot2)
library(scales)
library(maps)
library(mapdata)
library(grid)
data %>% count(country)
library(tidyverse)
data %>% count(country)
library(tidyverse)
library(magrittr)
library(zoo)
library(ggplot2)
library(scales)
library(maps)
library(mapdata)
library(grid)
data <- read.csv("whisky.csv")
data %>% count(country)
names(data) <- c("whisky","score","sd","reviews","cost","class","super_cluster","cluster","country","type")
data %>% count(country)
